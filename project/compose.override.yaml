services:
  # R2R is the main RAG (Retrieval-Augmented Generation) application that:
  #  - Processes documents and creates embeddings
  #  - Performs semantic search and graph clustering
  #  - Stores data in PostgreSQL and MinIO object storage
  #  - Uses Hatchet for workflow orchestration
  #  - Provides REST API for RAG operations on port 7272
  r2r:
    image: sciphiai/r2r:3.6.4
    #build:
    #  context: .
    #  dockerfile: Dockerfile.r2r-livepatch
    #image: r2r-livepatch:latest

    environment:
      # Database connection (R2R database)
      - R2R_POSTGRES_USER=${R2R_POSTGRES_USER}
      - R2R_POSTGRES_PASSWORD=${R2R_POSTGRES_PASSWORD}
      - R2R_POSTGRES_HOST=postgres
      - R2R_POSTGRES_PORT=5432
      - R2R_POSTGRES_DBNAME=${R2R_POSTGRES_DBNAME}
      - R2R_LOG_LEVEL=DEBUG
      - LOG_LEVEL=DEBUG
      
      # Hatchet workflow orchestration
      - HATCHET_GRPC_HOST=hatchet-engine
      - HATCHET_GRPC_PORT=7077
      - HATCHET_CLIENT_TOKEN=${HATCHET_CLIENT_TOKEN}
      - HATCHET_CLIENT_HOST=hatchet-engine
      - HATCHET_CLIENT_PORT=7077
      - HATCHET_CLIENT_TLS=false
      
      # MinIO object storage
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ENDPOINT=http://minio:9000
      
      # Service endpoints (internal Docker network)
      - GRAPH_CLUSTERING_ENDPOINT=http://graph_clustering:7276
      - UNSTRUCTURED_ENDPOINT=http://unstructured:7275
      
      # R2R configuration
      - R2R_PROJECT_NAME=${R2R_PROJECT_NAME:-contractsmarts_r2r}
      - R2R_CONFIG_PATH=/app/user_configs/azure_cs.toml

      # Unstructured configuration
      - UNSTRUCTURED_SERVICE_URL=http://unstructured:7275
      - UNSTRUCTURED_API_URL=https://api.unstructured.io/general/v0/general
      - UNSTRUCTURED_NUM_WORKERS=10

    volumes:
      - ./config/user:/app/user_configs
      - ./user_tools:/app/user_tools
      - hatchet_api_key:/hatchet_api_key:ro  # Read-only access to API key
    networks:
      - backend    # Access to MinIO, graph_clustering, unstructured, hatchet-engine
      - postgres   # Database access
    ports:
      - "7272:7272"  # R2R REST API
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7272/v3/health"]
      interval: 6s
      timeout: 5s
      retries: 5
    restart: on-failure
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      postgres:
        condition: service_healthy
      hatchet-engine:
        condition: service_healthy
      graph_clustering:
        condition: service_healthy
      unstructured:
        condition: service_healthy
      minio:
        condition: service_healthy
